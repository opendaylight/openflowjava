/*
 * Copyright (c) 2013 Pantheon Technologies s.r.o. and others. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 */

package org.opendaylight.openflowjava.protocol.impl.core;

<<<<<<< HEAD
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
=======
import java.io.FileInputStream;
>>>>>>> 5480b01... DO NOT MERGE: TLS support - initial code drop
import java.io.InputStream;

/**
 * Class for storing keys
 *
 * @author michal.polkorab
 */
public final class SslKeyStore {

    /**
     * InputStream instance of key
     * @param filename keystore location
     *
     * @return key as InputStream
     */
<<<<<<< HEAD
	public static InputStream asInputStream(String filename) {

		String keystorepath = "./configuration/ssl/" + filename ;
		File keystorefile = new File(keystorepath);
		InputStream in;
		try {
			in = new FileInputStream(keystorefile);

		} catch (FileNotFoundException e) {
			throw new IllegalStateException("KeyStore file not found: "
					+ keystorepath );
		}
		return in;
	}
=======
    public static InputStream asInputStream(String filename) {
        InputStream in = SslKeyStore.class.getResourceAsStream(filename);
        if (in == null) {
            throw new IllegalStateException("KeyStore file not found: " + filename);
        }
        return in;
    }
>>>>>>> 5480b01... DO NOT MERGE: TLS support - initial code drop

    /**
     * @return certificate password as char[]
     */
    public static char[] getCertificatePassword() {
        return "opendaylight".toCharArray();
    }

    /**
     * @return KeyStore password as char[]
     */
    public static char[] getKeyStorePassword() {
        return "opendaylight".toCharArray();
    }
}
